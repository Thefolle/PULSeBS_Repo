{"version":3,"sources":["API/Lecture.js","API/Booking.js","API/API.js","login.js","LectureItem.js","LecturesList.js","BookingItem.js","BookingsList.js","studentPage.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Lecture","id","date","presence","bookable","active","courseDesc","teacherName","teacherSurname","CLdesc","this","Booking","ref_student","ref_lecture","email","password","a","Promise","resolve","reject","fetch","baseURL","method","headers","body","JSON","stringify","then","response","ok","json","user","obj","catch","err","errors","param","msg","lecturesJson","console","log","map","l","desc","name","surname","status","errObj","lecture","bookingsJson","b","API","login","logout","getStudentLectures","bookSeat","getStudentBookings","LoginPage","props","state","redirect","invalidCredentials","userType","undefined","localeCompare","includes","setFullName","type","setState","to","pathname","Form","Group","controlId","Label","Control","placeholder","isInvalid","isEmailInvalid","onChange","event","target","value","Text","className","Jumbotron","Button","variant","disabled","length","onClick","React","Component","LectureItem","moment","Date","format","course","Image","width","height","src","alt","LecturesList","lectures","BookingItem","booking","BookingsList","bookings","StudentPage","errorObj","handleErrors","getStudentReservations","result","failed","history","push","bookingFailed","authErr","Container","fluid","exact","path","Row","role","data-toggle","href","aria-expanded","aria-controls","withRouter","PULSeBSApp","bind","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a38b01bc.chunk.js","sourcesContent":["class Lecture{   \n\n    constructor(id, date, presence, bookable, active, courseDesc, teacherName, teacherSurname, CLdesc) {\n        this.id = id;\n        this.date = date;\n        this.presence = presence;\n        this.bookable = bookable;\n        this.active = active;\n        this.courseDesc = courseDesc;\n        this.teacherName = teacherName;\n        this.teacherSurname = teacherSurname;\n        this.CLdesc = CLdesc;\n    }\n}\n\nexport default Lecture;","class Booking{   \n\n    constructor(ref_student, ref_lecture, date) {\n        this.ref_student = ref_student;\n        this.ref_lecture = ref_lecture;\n        this.date = date;\n    }\n}\n\nexport default Booking;","import Lecture from './Lecture.js'\nimport Booking from './Booking.js'\n\nconst baseURL = \"/api\";\n\nasync function login(email, password) {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + '/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email: email, password: password }),\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((user) => {\n                    resolve(user);\n                });\n            } else {\n                // analyze the cause of error\n                response.json()\n                    .then((obj) => { reject(obj); }) // error msg in the response body\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        }).catch((err) => { reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n    });\n}\n\nasync function logout() {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + '/logout', {\n            method: 'POST',\n        }).then((response) => {\n            if (response.ok) {\n                resolve(null);\n            } else {\n                // analyze the cause of error\n                response.json()\n                    .then((obj) => { reject(obj); }) // error msg in the response body\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        });\n    });\n}\n\n/****** STUDENT *******/\n\nasync function getStudentLectures() {\n    let url = \"/student/lectures\";    \n    const response = await fetch(baseURL + url);\n    const lecturesJson = await response.json();\n    if(response.ok){\n        console.log(lecturesJson);\n        return lecturesJson.map((l) => new Lecture(l.id, l.date, l.presence, l.bookable, l.active, l.desc, l.name, l.surname, l.desc)); //DOUBT on desc params\n    } else {\n        let err = {status: response.status, errObj:lecturesJson};\n        throw err;  // An object with the error coming from the server\n    }\n}\n\n\nasync function bookSeat(lecture) {\n    console.log(\"api:\" + lecture);\n    return new Promise((resolve, reject) => {\n    fetch(baseURL + \"/student/booking\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(lecture),\n    }).then((response) => {\n        if(response.ok) {\n            console.log(response);\n            resolve(response);\n        } else {\n            // analyze the cause of error\n            console.log(\"errore msg\");\n            response.json()\n            .then( (obj) => {reject(obj);} ) // error msg in the response body\n            .catch( (err) => {reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n        }\n    }).catch( (err) => {reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n });\n}\n\n\nasync function getStudentBookings() {\n    let url = \"/student/bookings\";\n    const response = await fetch(baseURL + url);\n    const bookingsJson = await response.json();\n    if(response.ok){\n        return bookingsJson.map((b) => new Booking(b.ref_student, b.ref_lecture, b.date)); //DOUBT the booking should give all info about the lecture\n    } else {\n        let err = {status: response.status, errObj:bookingsJson};\n        throw err;  // An object with the error coming from the server\n    }\n\n}\n\n\n/****** TEACHER *******/\n\n\n\nconst API = { login, logout, getStudentLectures, bookSeat, getStudentBookings };\nexport default API;","import React from 'react';\n\nimport Redirect from 'react-router-dom/Redirect';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport API from './API/API';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './customStyle.css';\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { email: '', password: '', redirect: false, invalidCredentials: false, userType: undefined };\n    }\n  \n    isEmailInvalid(email) {\n      if (!email.localeCompare('')) return undefined;\n      else return !email.includes('@');\n    }\n  \n    login() {\n  \n      API.login(this.state.email, this.state.password).then((user) => {\n        this.props.setFullName(user.name, user.surname, user.type);\n  \n        this.setState({ redirect: true, invalidCredentials: false, userType: user.type });\n      }).catch((err) => {\n        console.log(err);\n        this.setState({ redirect: false, invalidCredentials: true });\n      });\n  \n    }\n  \n    render() {\n  \n      return <>\n        {this.state.redirect ? <Redirect to={{ pathname: this.state.userType === 0 ? '/StudentHome' : this.state.userType === 1 ? '/TeacherHome' : '/StaffHome' }} /> : undefined}\n        <Form id='loginForm'>\n          <header><h1>Login</h1></header>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter email\" isInvalid={this.isEmailInvalid(this.state.email)} onChange={event => this.setState({ email: event.target.value })} />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n              </Form.Text>\n          </Form.Group>\n  \n          <Form.Group controlId=\"formPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={event => this.setState({ password: event.target.value })} />\n          </Form.Group>\n          {!this.state.invalidCredentials ? undefined :\n            <Jumbotron className='error'><p>Invalid email or password.</p></Jumbotron>\n          }\n          <Button variant=\"primary\" disabled={!this.state.email.includes('@') || this.state.password.length === 0} onClick={event => this.login()}>Log in</Button>\n        </Form>\n      </>;\n    }\n}\n\nexport default LoginPage;","import React from 'react';\nimport moment from 'moment';\nimport Image from 'react-bootstrap/Image';\n\nconst LectureItem = (props) => {\n\n  let {lecture, bookSeat} = props;\n\n\n  return (\n    <tr>\n      <td>{lecture.id}</td>\n      <td>{moment(new Date(lecture.date)).format(\"YYYY-MM-DD\")}</td>\n      {lecture.presence===1 && <td>yes</td>}\n      {lecture.presence===0 && <td>no</td>}\n      <td>{lecture.course}</td>\n      <td>{lecture.teacherName + \" \" + lecture.teacherSurname}</td> \n      {lecture.bookable &&\n       <td><Image width=\"30\" height=\"30\" className=\"img-button\" src=\"svg/calendar.svg\" alt =\"Calendar\" onClick={() => bookSeat(lecture)}/></td>   \n      }\n   </tr>\n  );\n}\n\nexport default LectureItem;\n","import React from 'react';\nimport LectureItem from './LectureItem';\n\nconst LecturesList = (props) => {\n\n  let {lectures, bookSeat} = props;\n\n  return(\n        <>\n          {lectures.length!==0 && \n            <table className=\"table\" id=\"lectures-table\">\n              <thead>\n              <tr>\n                <th>Id</th>\n                <th>Date</th>\n                <th>Presence</th>\n                <th>Course</th>\n                <th>Teacher</th>  \n                <th></th>              \n              </tr>\n              </thead>\n              <tbody>\n                {lectures.map((l) => <LectureItem key={l.id} lecture = {l} bookSeat = {bookSeat} \n                                                /> )}      \n              </tbody>     \n            </table>   \n             }\n           </>      \n  );\n}\n\nexport default LecturesList;\n","import React from 'react';\nimport moment from 'moment';\nimport Image from 'react-bootstrap/Image';\n\nconst BookingItem = (props) => {\n\n  let {booking} = props;\n\n\n  return (\n    <tr>\n      <td>{moment(new Date(booking.date)).format(\"YYYY-MM-DD\")}</td>\n      <td>{booking.ref_lecture}</td>\n       <td><Image width=\"30\" height=\"30\" className=\"img-button\" src=\"svg/delete.svg\" alt =\"\"/></td>   \n   </tr>\n  );\n}\n\nexport default BookingItem;\n","import React from 'react';\nimport BookingItem from './BookingItem';\n\nconst BookingsList = (props) => {\n\n  let {bookings} = props; //add delete method\n\n  return(\n        <>\n          {bookings.length!==0 && \n            <table className=\"table\">\n              <thead>\n              <tr>\n                <th>Date</th>\n                <th>Course</th>\n                <th></th>              \n              </tr>\n              </thead>\n              <tbody>\n                {bookings.map((b) => <BookingItem booking = {b} \n                                                /> )}      \n              </tbody>     \n            </table>   \n             }\n           </>      \n  );\n}\n\nexport default BookingsList;\n","import React from 'react';\nimport Switch from 'react-router-dom/Switch';\nimport Route from 'react-router-dom/Route';\nimport { withRouter } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport LecturesList from './LecturesList';\nimport BookingsList from './BookingsList'\nimport logo from './logo.svg';\nimport './App.css';\nimport API from './API/API';\n\n\nclass StudentPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { email: '', name: props.name, surname: props.surname, userType: 'student', lectures: [], bookings: [], bookingFailed: ''};\n      }\n\n      componentDidMount() {\n        API.getStudentLectures()\n            .then((lectures) => {\n              API.getStudentBookings()\n              .then((bookings) => {\n              this.setState((state, props) => ({lectures: lectures, bookings: bookings}));\n            })\n          })\n        }\n    \n    \n      handleErrors(err) {\n        if (err) {\n          if (err.status && err.status === 401) {\n            this.setState({ authErr: err.errorObj });\n            this.props.history.push(\"/\");\n          }\n        }\n      }\n    \n    \n      getStudentLectures = () => {\n        API.getStudentLectures().then((lectures) => this.setState({ lectures: lectures }))\n          .catch((errorObj) => {\n            this.handleErrors(errorObj);\n          });\n      }\n    \n      getStudentReservations = () => {\n        API.getStudentReservations().then((bookings) => this.setState({ bookings: bookings }))\n        .catch((errorObj) => {\n          this.handleErrors(errorObj);\n        });\n      }\n    \n      bookSeat = (lecture) => {\n        API.bookSeat(lecture).then((result) => { \n          console.log(result);\n          if(result === 1){\n            this.setState({failed: 0});\n            this.props.history.push(\"/bookings\"); \n          }else{\n            this.setState({failed: 1});\n            //error page\n          }\n        }) //if SUCCEDED return 1\n        .catch((errorObj) => {\n          this.handleErrors(errorObj);\n        });\n      }\n    \n      //add Delete method in mybookings \n    \n      render() {\n        return (\n          //TODO: Header & put buttons into the nav bar and create the student home page  \n          <Container fluid>\n            <Switch>\n              <Route exact path=\"/StudentHome\">\n                <Row className=\"vheight-100\">\n                  <div className=\"list-group\">\n                    <a className=\"list-group-item list-group-item-action\" role=\"button\" data-toggle=\"collapse\" href=\"/lectures\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                      Lectures \n                    </a>\n                    <a className=\"list-group-item list-group-item-action\" role=\"button\" data-toggle=\"collapse\" href=\"/bookings\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                      Bookings \n                    </a>\n                  </div>\n                </Row>\n              </Route>\n              <Route exact path=\"/lectures\">\n                <LecturesList lectures = {this.state.lectures} bookSeat = {this.bookSeat} />          \n              </Route>\n              <Route exact path=\"/bookings\">\n                <BookingsList bookings = {this.state.bookings}/>\n              </Route>\n            </Switch>\n          </Container>\n        );\n      }\n    }\n    \n    \n    export default withRouter(StudentPage);\n\n    ","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Switch from 'react-router-dom/Switch';\nimport Route from 'react-router-dom/Route';\nimport Redirect from 'react-router-dom/Redirect';\nimport LoginPage from './login';\nimport StudentPage from './studentPage';\n\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <PULSeBSApp></PULSeBSApp>\n      </Router>\n    </div>\n  )\n}\n\nclass PULSeBSApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: '', surname: '', type: undefined };\n    this.setFullName = this.setFullName.bind(this);\n  }\n\n  // called by LoginPage, this method sets the fullname of the user at this level; it may be useful for presentation purposes\n  setFullName(name, surname, type) {\n    this.setState({ name: name, surname: surname, type: type });\n  }\n\n  render() {\n    return <>\n      <Switch>\n        <Route exact path='/Login'>\n          <LoginPage setFullName={this.setFullName} ></LoginPage>\n        </Route>\n        <Route exact path='/StudentHome' >\n          {/* <StudentPage /> */}\n          <StudentPage name={this.state.name} surname={this.state.surname} />\n        </Route>\n        <Route exact path='/TeacherHome'>\n          {/* <TeacherPage /> */}\n        </Route>\n        <Route exact path='/'>\n          <Redirect to='Login' />\n        </Route>\n      </Switch>\n    </>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}