{"version":3,"sources":["User.js","API/Lecture.js","API/Booking.js","API/LectureTeacher.js","API/API.js","login.js","LectureItem.js","LecturesList.js","BookingItem.js","BookingsList.js","components/UserNavBar.js","components/StudentCalendar.js","studentPage.js","components/CourseList.js","components/LectureList.js","components/StudentiList.js","components/TeacherPage.js","App.js","reportWebVitals.js","index.js"],"names":["User","id","name","surname","type","this","Lecture","date","presence","bookable","active","courseDesc","teacherName","teacherSurname","classDesc","Booking","ref_student","ref_lecture","course","class","LectureTeacher","classC","lecId","email","password","a","Promise","resolve","reject","fetch","baseURL","method","headers","body","JSON","stringify","then","response","ok","json","user","obj","catch","err","errors","param","msg","lecturesJson","console","log","map","l","status","errObj","lectureId","bookingsJson","b","bookingId","filter","idJson","API","login","logout","getStudentLectures","bookSeat","getStudentBookings","cancelBooking","getTeacherLectures","getStudents","LoginPage","props","state","redirect","invalidCredentials","userType","undefined","localeCompare","includes","setFullName","setState","to","pathname","Form","Group","controlId","Label","Control","placeholder","isInvalid","isEmailInvalid","onChange","event","target","value","Text","className","Jumbotron","Button","variant","disabled","length","onClick","React","Component","LectureItem","lecture","bookings","alreadyBooked","moment","Date","format","valueOf","Image","width","height","src","alt","LecturesList","lectures","BookingItem","booking","BookingsList","Table","UserNavBar","brand","Navbar","Brand","OverlayTrigger","placement","overlay","Tooltip","bg","path","exact","tabs","StudentCalendar","events","forEach","push","title","Container","plugins","dayGridPlugin","initialView","allDaySlot","slotDuration","slotMinTime","slotMaxTime","headerToolbar","left","center","right","StudentPage","loadData","errorObj","handleErrors","result","failed","history","bookingID","bookingFailed","bind","authErr","role","href","aria-expanded","aria-controls","match","url","withRouter","CourseItem","index","CourseList","courses","getLectures","c","idc","LectureList","parseInt","StudentItem","student","studentId","StudentList","students","idl","e","lId","s","TeacherPage","getCourses","Map","item","has","set","getStudentsByLecture","sort","style","margin","color","render","params","courseId","PULSeBSApp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63180b03.chunk.js","sourcesContent":["class User {\n    constructor (id, name, surname, type) {\n        this.id = id;\n        this.name = name;\n        this.surname = surname;\n        this.type = type;\n    }\n}\n\nexport default User;","class Lecture{   \n\n    constructor(id, date, presence, bookable, active, courseDesc, teacherName, teacherSurname, classDesc) {\n        this.id = id;\n        this.date = date;\n        this.presence = presence;\n        this.bookable = bookable;\n        this.active = active;\n        this.courseDesc = courseDesc;\n        this.teacherName = teacherName;\n        this.teacherSurname = teacherSurname;\n        this.classDesc = classDesc;\n    }\n}\n\nexport default Lecture;","class Booking{\n\n    constructor(id,ref_student, ref_lecture, date, course, classDesc, presence, active) {\n        this.id = id;\n        this.ref_student = ref_student;\n        this.ref_lecture = ref_lecture;\n        this.date = date;\n        this.course = course;\n        this.class = classDesc;\n        this.presence = presence;\n        this.active = active;\n    }\n}\n\nexport default Booking;","class LectureTeacher{   \n\n    constructor(course,classC,id,lecId,date, presence, bookable){\n        this.course = course;\n        this.classC = classC;\n        this.id=id;\n        this.lecId=lecId;\n        this.date=date;\n        this.presence = presence;\n        this.bookable = bookable;\n        \n        \n    }\n}\n\nexport default LectureTeacher;","import Lecture from './Lecture.js'\nimport Booking from './Booking.js'\nimport LectureTeacher from './LectureTeacher.js'\nimport { Ellipsis } from 'react-bootstrap/esm/PageItem';\nconst baseURL = \"/api\";\n\n\nasync function login(email, password) {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + '/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email: email, password: password }),\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((user) => {\n                    resolve(user);\n                });\n            } else {\n                // analyze the cause of error\n                response.json()\n                    .then((obj) => { reject(obj); }) // error msg in the response body\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        }).catch((err) => { reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n    });\n}\n\nasync function logout() {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + '/logout', {\n            method: 'POST',\n        }).then((response) => {\n            if (response.ok) {\n                resolve(null);\n            } else {\n                // analyze the cause of error\n                response.json()\n                    .then((obj) => { reject(obj); }) // error msg in the response body\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        });\n    });\n}\n\n/****** STUDENT *******/\n\nasync function getStudentLectures() {\n    let url = \"/student/lectures\";    \n    const response = await fetch(baseURL + url);\n    const lecturesJson = await response.json();\n    if(response.ok){\n        console.log(lecturesJson);\n        return lecturesJson.map((l) => new Lecture(l.id, l.date, l.presence, l.bookable, l.active, l.course, l.name, l.surname, l.class));\n        } else {\n        let err = {status: response.status, errObj:lecturesJson};\n        throw err;  // An object with the error coming from the server\n    }\n}\n\n\nasync function bookSeat(lectureId) {\n    return new Promise((resolve, reject) => {\n    fetch(baseURL + \"/student/booking\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({lectureId : lectureId}), \n    }).then((response) => {\n        if(response.ok) {\n            resolve(response);\n        } else {\n            // analyze the cause of error\n            console.log(\"errore msg\");\n            response.json()\n            .then( (obj) => {reject(obj);} ) // error msg in the response body\n            .catch( (err) => {reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n        }\n    }).catch( (err) => {reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n });\n}\n\n\nasync function getStudentBookings() {\n    let url = \"/student/bookings\";\n    const response = await fetch(baseURL + url);\n    const bookingsJson = await response.json();\n    if(response.ok){\n        console.log(bookingsJson);\n        return bookingsJson.map((b) => new Booking(b.id,b.ref_student, b.ref_lecture, b.date, b.course, b.class, b.presence, b.active));\n    } else {\n        let err = {status: response.status, errObj:bookingsJson};\n        throw err;  // An object with the error coming from the server\n    }\n\n}\n\n\nasync function cancelBooking(bookingId){\n    return new Promise((resolve, reject) =>{\n        fetch(baseURL + \"/student/bookings/\" + bookingId, {\n            method: 'DELETE'\n        }).then((response) => {\n            if (response.ok) {\n                resolve(null);\n            } else {\n                // analyze the cause of error\n                response.json()\n                .then( (obj) => {reject(obj);})\n                .catch( (err) => { reject({errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }]})}); //something else\n            }\n        }).catch( (err) => {reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n    })\n}\n\n\n/****** TEACHER *******/\nasync function getTeacherLectures() {\n    let url=\"/teacher/lectures\";\n    const response=await fetch(baseURL+url);\n    const lecturesJson=await response.json();\n    if(response.ok){\n        return lecturesJson.map((l) => new LectureTeacher(l.course, l.class, l.id,l.lecId, l.date, l.presence, l.bookable));\n    }else{\n        let err = {status: response.status, errObj:lecturesJson};\n        throw err;\n    }\n}\n\nasync function getStudents(filter){\n    let url=\"/getStudentsForLecture\";\n    const response=await fetch(baseURL+url);\n    const idJson=await response.json();\n    if(response.ok){\n        return idJson;\n    } else {\n        let err = {status: response.status, errObj:idJson};\n        throw err;  // An object with the error coming from the server\n    }\n}\n\n\n\nconst API = { login, logout, getStudentLectures, bookSeat, getStudentBookings, cancelBooking, getTeacherLectures, getStudents };\nexport default API;\n","import React from 'react';\n\nimport {Redirect} from 'react-router-dom';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport API from './API/API';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './customStyle.css';\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { email: '', password: '', redirect: false, invalidCredentials: false, userType: undefined };\n    }\n\n    isEmailInvalid(email) {\n      if (!email.localeCompare('')) return undefined;\n      else return !email.includes('@');\n    }\n\n    login() {\n\n      API.login(this.state.email, this.state.password).then((user) => {\n        this.props.setFullName(user.id, user.name, user.surname, user.type);\n\n        this.setState({ redirect: true, invalidCredentials: false, userType: user.type });\n      }).catch((err) => {\n        console.log(err);\n        this.setState({ redirect: false, invalidCredentials: true });\n      });\n\n    }\n\n    render() {\n\n      return <>\n        {this.state.redirect ? <Redirect to={{ pathname: this.state.userType === 0 ? '/StudentHome' : this.state.userType === 1 ? '/teacher' : '/StaffHome' }} /> : undefined}\n        <Form id='loginForm'>\n          <header><h1>Login</h1></header>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter email\" isInvalid={this.isEmailInvalid(this.state.email)} onChange={event => this.setState({ email: event.target.value })} />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n              </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={event => this.setState({ password: event.target.value })} />\n          </Form.Group>\n          {!this.state.invalidCredentials ? undefined :\n            <Jumbotron className='error'><p>Invalid email or password.</p></Jumbotron>\n          }\n          <Button variant=\"primary\" disabled={!this.state.email.includes('@') || this.state.password.length === 0} onClick={event => this.login()}>Log in</Button>\n        </Form>\n      </>;\n    }\n}\n\nexport default LoginPage;\n","import React       from 'react';\nimport moment      from 'moment';\nimport Image       from 'react-bootstrap/Image';\nimport { ImCross } from \"react-icons/im\";\n\nconst LectureItem = ( props ) => {\n\n    let {lecture, bookings, bookSeat, alreadyBooked} = props;\n\n    alreadyBooked = (lectureId) => {\n            const ids = bookings.map((b) => b.ref_lecture );\n            if(ids.includes(lectureId) === true)\n              return 1;\n            else\n              return 0;\n    }\n\n\n    return (\n        <tr key={lecture.id}>\n            <td>{ moment( new Date( lecture.date ) ).format( \"YYYY-MM-DD\" ) }</td>\n            <td>{ moment( new Date( lecture.date ) ).format( \"HH:MM\" ) }</td>\n            { lecture.presence === 1 && <td>yes</td> }\n            { lecture.presence === 0 && <td>no</td> }\n            <td>{ lecture.courseDesc }</td>\n            <td>{ lecture.classDesc }</td>\n            <td>{ lecture.teacherName + \" \" + lecture.teacherSurname }</td>\n            { lecture.bookable === 1 && alreadyBooked(lecture.id) === 0 && lecture.date > moment().valueOf() ?\n            <td><Image width=\"30\" height=\"30\" className=\"img-button\" type=\"button\" src=\"/svg/calendar.svg\" alt=\"\"\n                       onClick={ () => bookSeat( lecture.id ) }/></td> : <td><ImCross/></td>\n                /*do something if it fails*/\n            }\n        </tr>\n    );\n}\n\nexport default LectureItem;\n","import React       from 'react';\nimport LectureItem from './LectureItem';\n\nconst LecturesList = ( props ) => {\n\n    let {lectures, bookings, bookSeat, alreadyBooked} = props;\n\n    return (\n        <>\n            { lectures.length !== 0 &&\n            <table className=\"table\" id=\"lectures-table\">\n                <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Time</th>\n                    <th>Presence</th>\n                    <th>Course</th>\n                    <th>Class</th>\n                    <th>Teacher</th>\n                    <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                { lectures.map( ( l ) => <LectureItem key={ l.id } lecture={ l } bookings={bookings} bookSeat={ bookSeat } alreadyBooked={ alreadyBooked } /> ) }\n                </tbody>\n            </table>\n            }\n        </>\n    );\n}\n\nexport default LecturesList;\n","import React from 'react';\nimport moment from 'moment';\nimport Image from 'react-bootstrap/Image';\n\nconst BookingItem = (props) => {\n\n  let {booking, cancelBooking} = props;\n\n  return (\n    <tr key={booking.id}>\n      <td>{moment(new Date(booking.date)).format(\"YYYY-MM-DD\")}</td>\n        <td>{booking.course}</td>\n        <td>{booking.class}</td>\n        <td>{booking.presence === 1 ? \"Presence\" : \"Remote\"}</td>\n       <td><Image width=\"30\" height=\"30\" className=\"img-button\" type=\"button\" src=\"/svg/delete.svg\" alt =\"\" onClick = {()=>cancelBooking(booking.id)}/></td>\n   </tr>\n  );\n}\n\nexport default BookingItem;\n","import React       from 'react';\nimport BookingItem from './BookingItem';\nimport { Table }   from \"react-bootstrap\";\n\nconst BookingsList = ( props ) => {\n\n    let {bookings, cancelBooking} = props; //add delete method\n\n    return (\n            <Table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Course</th>\n                    <th>Class</th>\n                    <th>Presence</th>\n                    <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n\n                { bookings.map( ( b ) => <BookingItem key={ b.id } booking={ b } cancelBooking={cancelBooking} /> ) }\n\n                </tbody>\n            </Table>\n\n    );\n}\n\nexport default BookingsList;\n","import React from 'react';\n\nimport API from '../API/API';\nimport Navbar from 'react-bootstrap/Navbar';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Button from 'react-bootstrap/Button';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Switch                      from 'react-router-dom/Switch';\nimport Route                       from 'react-router-dom/Route';\nimport Link                        from 'react-router-dom/Link';\n\nimport '../App.css';\nimport '../customStyle.css';\nimport { FaHome }                  from \"react-icons/fa\";\n\nclass UserNavBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  logout() {\n    API.logout().then(() => {\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  render() {\n\n    let brand = <Navbar.Brand>\n      <OverlayTrigger\n        placement='bottom'\n        overlay={\n          <Tooltip>\n            Home\n          </Tooltip>\n        }\n      >\n        <FaHome />\n      </OverlayTrigger>\n\n    </Navbar.Brand>;\n\n    return <Navbar id=\"navbar\" bg=\"light\" variant=\"light\">\n      <Switch>\n        <Route path='/StudentHome'>\n          <Link to='/StudentHome'>\n            {brand}\n          </Link>\n        </Route>\n        <Route exact path='/StudentHome'>\n          {/* The property tabs has to be an array of div elements; each div is rendered as a group, while each div can contain multiple items */}\n          {this.props.tabs}\n        </Route>\n        <Route path='/teacher'>\n          <Link to='/teacher'>\n            {brand}\n          </Link>\n        </Route>\n        <Route exact path='/teacher'>\n          {this.props.tabs}\n        </Route>\n      </Switch>\n      <div>\n        <label>Hello</label>\n        <Link to='/'>\n          <Button onClick={event => this.logout()}>Log out</Button>\n        </Link>\n      </div>\n    </Navbar>;\n  }\n}\n\nexport default UserNavBar;","import React         from 'react';\nimport moment        from 'moment';\nimport { Container } from \"react-bootstrap\";\nimport FullCalendar  from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/timegrid';\n\nimport '../style/studentCalendar.css';\n\nclass StudentCalendar extends React.Component {\n    render() {\n        //Loading and preparing bookings\n        let events = [];\n        this.props.bookings.forEach( booking => {\n            events.push( {title: booking.course, date: moment( booking.date ).format()} );\n        } )\n\n        return <Container>\n            <hr/>\n            <FullCalendar\n                plugins={ [ dayGridPlugin ] }\n                initialView=\"timeGridWeek\"\n                allDaySlot={false}\n                slotDuration=\"00:30:00\"\n                slotMinTime=\"08:30:00\"\n                slotMaxTime=\"21:00:00\"\n                headerToolbar={\n                    {\n                        left: 'prev,next',\n                        center: 'title',\n                        right: 'timeGridDay,timeGridWeek'\n                    }\n                }\n                events={ events }\n            />\n        </Container>\n    }\n}\n\nexport default StudentCalendar;","import React from 'react';\nimport Route from 'react-router-dom/Route';\nimport { withRouter } from 'react-router-dom';\nimport LecturesList from './LecturesList';\nimport BookingsList from './BookingsList';\nimport UserNavBar      from './components/UserNavBar';\nimport StudentCalendar from \"./components/StudentCalendar\";\n\nimport './App.css';\nimport API from './API/API';\n\nimport { FaBookOpen, FaCalendarAlt } from \"react-icons/fa\";\nimport { Button } from \"react-bootstrap\";\nimport Switch from 'react-router-dom/Switch';\n\nclass StudentPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.id,\n            email: '',\n            name: this.props.name,\n            surname: this.props.surname,\n            userType: 'student',\n            lectures: [],\n            bookings: [],\n            bookingFailed: ''\n        };\n\n        this.getStudentLectures = this.getStudentLectures.bind(this);\n        this.getStudentBookings = this.getStudentBookings.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n\n    loadData = () => {\n\n        API.getStudentLectures()\n            .then((lectures) => {\n                API.getStudentBookings()\n                    .then((bookings) => {\n                        this.setState((state, props) => ({ lectures: lectures, bookings: bookings }));\n                    })\n            })\n    }\n\n\n    handleErrors(err) {\n        if (err) {\n            if (err.status && err.status === 401) {\n                this.setState({ authErr: err.errorObj });\n                this.props.history.push(\"/\");\n            }\n        }\n        console.log(\"Error occured. Check the handleErrors method in studentPage.\");\n        console.log(err);\n    }\n\n\n    getStudentLectures = () => {\n        console.log(\"Get lectures:\");\n        API.getStudentLectures().then((lectures) => { console.log(\"Lectures found correctly:\"); console.log(lectures); this.setState({ lectures: lectures }); })\n            .catch((errorObj) => {\n                this.handleErrors(errorObj);\n            });\n    }\n\n    getStudentBookings = () => {\n        API.getStudentBookings().then((bookings) => { return bookings; })\n            .catch((errorObj) => {\n                this.handleErrors(errorObj);\n            });\n    }\n\n\n    bookSeat = (lectureId) => {\n        API.bookSeat(lectureId).then((result) => {\n            if (result.ok) {\n                this.setState({ failed: 0 });\n                this.props.history.push(\"/StudentHome/bookings\");\n            } else {\n                this.setState({ failed: 1 });\n                //error page\n            }\n        }) //if SUCCEDED return 1\n            .catch((errorObj) => {\n                this.handleErrors(errorObj);\n            });\n    }\n\n\n\n    //add Delete method in mybookings\n    cancelBooking = (bookingID) => {\n        API.cancelBooking(bookingID)\n            .then(() => {\n                //get the updated list of tasks from the server\n                API.getStudentBookings().then((bookings) => this.setState({ bookings: bookings }));\n            })\n            .catch((errorObj) => {\n                this.handleErrors(errorObj);\n            });\n    }\n\n\n\n    render() {\n\n        return (\n            <>\n                <UserNavBar/>\n                <div>\n                    <Button className=\"btn btn-secondary\" role=\"button\" href=\"/StudentHome/lectures\"\n                        aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        Lectures\n                        <FaBookOpen className={\"ml-1\"} />\n                    </Button>\n                    <Button className=\"btn btn-secondary\" role=\"button\" href=\"/StudentHome/calendar\"\n                            aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        My Calendar\n                        <FaCalendarAlt className={\"ml-1\"} />\n                    </Button>\n                    <a type=\"button\" className=\"btn btn-secondary\" role=\"button\" href=\"/StudentHome/bookings\"\n                        aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        Bookings\n                        <FaCalendarAlt className={\"ml-1\"} />\n                    </a>\n                </div>\n                <Switch>\n                    <Route exact path={this.props.match.url + \"/lectures\"}>\n                        <LecturesList lectures={this.state.lectures} bookings={this.state.bookings} bookSeat={this.bookSeat} alreadyBooked={this.alreadyBooked} />\n                    </Route>\n                    <Route exact path={this.props.match.url + \"/bookings\"}>\n                        <BookingsList bookings={this.state.bookings} cancelBooking={this.cancelBooking} />\n                    </Route>\n                    <Route exact path={this.props.match.url + \"/calendar\"}>\n                    <StudentCalendar bookings={this.state.bookings} />\n                </Route>\n                </Switch>\n            </>\n        );\n    }\n}\n\n\nexport default withRouter(StudentPage);\n\n","import React     from 'react';\nimport { Link }  from 'react-router-dom';\nimport { Table } from \"react-bootstrap\";\n\nconst CourseList = ( props ) => {\n  let {courses,getLectures}=props;\n\n\n    return (\n        <Table className=\"table\" id=\"lectures-table\">\n            <thead>\n            <tr>\n                <th>Name</th>\n            </tr>\n            </thead>\n            <tbody>\n            { courses.map( ( c ) => <CourseItem key={ c.id } course={ c } index={ c.id }/> ) }\n            </tbody>\n        </Table>\n    );\n}\n\nconst CourseItem = ( props ) => {\n    let {course, index} = props;\n\n    return (\n        <tr>\n            <td><Link to={ \"/teacher/\" + index + \"/lectures\" }>{ course.course }</Link></td>\n        </tr>\n\n    );\n}\n\nexport default CourseList;\n","import React    from 'react';\nimport moment   from 'moment';\nimport { Link } from 'react-router-dom';\nimport { Table }    from \"react-bootstrap\";\n\nconst LectureList = ( props ) => {\n  let {lectures,idc,getLectures } = props;\n  getLectures();\n\n    return (\n        <Table className=\"table\" id=\"lectures-table\">\n            <thead>\n            <tr>\n                <th>Date</th>\n            </tr>\n            </thead>\n            <tbody>\n            { lectures.filter(l=>l.id===parseInt(idc)).map( ( l, id ) => <LectureItem key={ id } lecture={ l } idc={ idc } index={ l.lecId }/> ) }\n            </tbody>\n        </Table>\n    );\n\n}\n\nconst LectureItem = ( props ) => {\n    let {lecture, idc, index} = props;\n\n    return (\n\n        <tr>\n            <td><Link\n                to={ \"/teacher/\" + idc + \"/\" + index + \"/students\" }>{ moment( lecture.date ).format( \"DD MMM YYYY HH:mm\" ) }</Link>\n            </td>\n        </tr>\n\n    );\n}\n\nexport default LectureList;\n","import React     from 'react';\nimport { Table } from \"react-bootstrap\";\n\nconst StudentList = ( props ) => {\n    let {students,idl,getLectures } =props;\n    getLectures();\n    //let student = students.filter( e => e.lId === parseInt( idl ) );\n    return (\n        <Table className=\"table\" id=\"lectures-table\">\n            <thead>\n            <tr>\n                <th>Id</th>\n            </tr>\n            </thead>\n            <tbody>\n            { students.filter( e => e.lId === parseInt( idl ) )\n              .map( ( s, id ) => <StudentItem key={ id } student={ s }/> ) }\n            </tbody>\n        </Table>\n    );\n\n}\n\nconst StudentItem = ( props ) => {\n    let {student} = props;\n\n    return (\n        <tr>\n            <td>{ student.studentId }</td>\n        </tr>\n    );\n}\n\nexport default StudentList;\n","import React from 'react';\nimport { withRouter, Switch, Route } from 'react-router-dom';\n\nimport API from '../API/API';\nimport CourseList from './CourseList';\nimport LectureList from './LectureList';\nimport StudentList from './StudentiList';\nimport ButtonTeacherHub from './ButtonTeacherHub';\nimport UserNavBar from './UserNavBar';\nimport { Link } from 'react-router-dom';\n\nimport '../App.css';\nimport '../customStyle.css';\n\nclass TeacherPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id,\n            email: '',\n            name: this.props.name,\n            surname: this.props.surname,\n            userType: 'teacher',\n            lectures: [],\n            courses: [],\n            students: []\n        };\n    }\n\n    componentDidMount() {\n        API.getTeacherLectures()\n            .then((lectures) => {\n                this.setState({\n                    lectures: lectures,\n                    courses: this.getCourses(lectures).sort()\n                });\n                this.getStudentsByLecture();\n            })\n            .catch((err) => {\n                this.handleErrors(err);\n            });\n    }\n\n    handleErrors = (err) => {\n        if (err) {\n            if (err.status && err.status === 401) {\n                this.props.history.push(\"/\");\n            }\n        }\n        console.log(\"Error occured. Check the handleErrors method in teacherPage.\");\n        console.log(err);\n    }\n\n    getCourses = (lectures) => {\n        const result = [];\n        const map = new Map();\n        for (const item of lectures) {\n            if (!map.has(item.id)) {\n                map.set(item.id, true);    // set any value to Map\n                result.push({\n                    id: item.id,\n                    course: item.course\n                });\n            }\n        }\n        console.log(\"Courses:\");\n        console.log(result);\n        return result;\n    }\n\n\n    getStudentsByLecture = () => {\n        API.getStudents()\n            .then((student) => {\n                this.setState({ students: student });\n            })\n            .catch((err) => {\n                this.handleErrors(err);\n            });\n    }\n\n    getTeacherLectures = () => {\n        API.getTeacherLectures()\n            .then((lectures) => {\n                this.setState({ lectures: lectures, courses: this.getCourses(lectures).sort() });\n                this.getStudentsByLecture();\n            })\n            .catch((errorObj) => {\n                this.handleErrors(errorObj);\n            });\n    }\n\n    render() {\n\n        return (\n            <>\n                <UserNavBar />\n                <div className={\"btn btn-primary\"} style={{ margin: \"10px\" }}>\n                    <Link to='/teacher/courses' style={{ color: \"white\" }}>\n                        Lectures of my Courses\n                    </Link>\n                </div>\n                <Switch>\n                    <Route exact path={\"/teacher/courses\"}>\n                        <CourseList courses={this.state.courses} />\n                    </Route>\n                    <Route exact path={\"/teacher/:courseId/lectures\"} render={({ match }) => (\n                        <LectureList lectures={this.state.lectures} idc={match.params.courseId} getLectures={this.getTeacherLectures} />\n                    )} />\n                    <Route exact path={\"/teacher/:courseId/:lectureId/students\"} render={({ match }) => (\n                        <StudentList students={this.state.students} idl={match.params.lectureId} getLectures={this.getTeacherLectures} />\n                    )} />\n                </Switch>\n            </>\n\n        );\n    }\n}\n\nexport default withRouter(TeacherPage);\n","import React from 'react';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport User from './User';\nimport LoginPage                   from './login';\nimport StudentPage                 from './studentPage';\nimport TeacherPage   from './components/TeacherPage';\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <PULSeBSApp></PULSeBSApp>\n            </Router>\n        </div>\n    )\n}\n\nclass PULSeBSApp extends React.Component {\n    constructor( props ) {\n        super( props );\n        this.state = {user: undefined};\n        this.setFullName = this.setFullName.bind( this );\n    }\n\n    // called by LoginPage, this method sets the fullname of the user at this level; it may be useful for presentation\n    // purposes\n    setFullName( id, name, surname, type ) {\n        this.setState({user: new User(id, name, surname, type) });\n    }\n\n\n    render() {\n        return <>\n            <Router>\n                <Switch>\n                        <Route exact path='/Login'>\n                            <LoginPage setFullName={ this.setFullName }/>\n                        </Route>\n                        <Route path='/StudentHome' >\n                         <StudentPage user={this.state.user} />\n                        </Route>\n                        <Route path='/teacher'>\n                            <TeacherPage id={ this.state.id } user={this.state.user} name={ this.state.name } surname={ this.state.surname }/>\n                        </Route>\n                        <Route exact path='/'>\n                            <Redirect to='Login'/>\n                        </Route>\n                </Switch>\n            </Router>\n        </>;\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}